package com.brianway.learning.java.base.generics;

import com.brianway.learning.java.base.generics.Holder;
import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class WildcardsTest {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: com/brianway/learning/java/base/generics/Wildcards.java */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire method.
   */

  @Test
  public void exact2InputNotNullZeroOutputZero()
      throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {

    // Arrange
    Holder holder = new Holder();
    Object arg = 0;

    // Act
    Class<?> classUnderTest =
        Reflector.forName("com.brianway.learning.java.base.generics.Wildcards");
    Method methodUnderTest = classUnderTest.getDeclaredMethod(
        "exact2", Reflector.forName("com.brianway.learning.java.base.generics.Holder"),
        Reflector.forName("java.lang.Object"));
    methodUnderTest.setAccessible(true);
    Object retval = (Object)methodUnderTest.invoke(null, holder, arg);

    // Assert result
    Assert.assertEquals(new Integer(0), retval);
  }
}
